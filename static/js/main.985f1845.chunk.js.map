{"version":3,"sources":["components/AboutMe.js","components/Main.js","components/Projects.js","components/Skills.js","App.js","serviceWorker.js","index.js"],"names":["AboutMe","props","className","onClick","toggleMain","stopPropagation","Main","Projects","href","Skills","App","useState","aboutMeModal","skillsModal","projectsModal","modals","setModals","e","preventDefault","name","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.985f1845.chunk.js","sourcesContent":["import React from 'react'\n\nfunction AboutMe(props) {\n    return (\n        <div className='modal-background' onClick={props.toggleMain}>\n            <div className='modal' onClick={props.stopPropagation}>\n                <div className='title-bar'>\n                    <h2>\n                        About Me\n                    </h2>\n                    <div className='close' onClick={props.toggleMain}>\n                        <h2>X</h2>\n                    </div>\n                </div>\n                <div className='content'>\n                    <p>I am a Full Stack Web Dev who received training at Lambda School(a nine-month 40 hr/week training program). At Lambda I learned many of the skills necessary to get a start in the tech industry; including pair-programming, working in sprints, planning and designing projects, working on a cross-functional team, learning new frameworks quickly as the project demands, and much more. </p>\n                    <p>Before this career change I spent a lot of my life working in food service(eventually rising to the level of Department Manager) and construction. My restaurant work taught me to work as part of a team in a fast-paced high stress environment. My management experience taught me to maintain calm in myself and others in difficult situations, and to analyze a situation objectively to identify problems and quickly come up with relevant, actionable solutions. Both my management and construction experience taught me the value of hard work and planning, and going above and beyond to get the job done.</p>\n                    <p>Throughout my adult life I have lived in many locations across the south, midwest and north-east United States. I have found myself very adept at integrating with a wide variety of people and cultures. This skill has served me well in my many moves by allowing me to fit in quickly and easily with diverse groups.</p>\n                </div>\n            </div>\n        </div>)\n}\n\nexport default AboutMe","import React from 'react'\n\nfunction Main() {\n    return (\n        <div className=\"content-cont\">\n            {/* <div className=\"sym\"><p>{'</>'}</p></div> */}\n\n            <h1 className='align-down'>Tony Burch</h1>\n            <div className='line-cont'>\n                <div className='borderRightBot'></div><div className='borderLeftBot'></div>\n            </div>\n            <h2>Full Stack Web Developer</h2>\n            <h2>tlb.dev@gmx.com</h2>\n\n            <div className='borderLeftTop'></div><span className='borderRightTop'></span>\n        </div>\n    )\n}\n\nexport default Main","import React from 'react'\n\nfunction Projects(props) {\n    return (\n        <div className='modal-background' onClick={props.toggleMain}>\n            <div className='modal' onClick={props.stopPropagation}>\n                <div className='title-bar'>\n                    <h2>\n                        Projects\n                    </h2>\n                    <div className='close' onClick={props.toggleMain}>\n                        <h2>X</h2>\n                    </div>\n                </div>\n                <div className='content'>\n                    <p><a href='https://github.com/TLBdev/cs.backend'>Django API for Multi-User Dungeon</a></p>\n                    <p>A simple Rest api using Django</p>\n                    <p>Python | Django | DjangoRestFramework </p>\n                    <p>DjangoKnox | Psycopg2 | PostgreSQL</p>\n                    <p>Built by 2 developers with no prior knowledge of Django through use of tutorials and documentation with a 1 week deadline. Completed in 2 days and freed the back-end team to transition to the front-end to further speed development.</p>\n                    <p>Solely responsible for seeding database and designing algorithm to link nodes into a 3-d arrangement.</p>\n                    <p>Used DjangoRestFramework to develop this project into a minimum viable product as quickly as possible.</p>\n                    <div className='line-break'></div>\n                    <p><a href='https://github.com/TLBdev/BE'>Node API for simple social-network style web app</a></p>\n                    <p>A Node Rest API for a project to create a Web App to help connect parents to share chaperone responsibilities at Theme Parks. </p>\n                    <p>JavaScript | Express | BcryptJS </p>\n                    <p>Knex | PostgreSQL | JsonWebToken</p>\n                    <p>Built by 2 developers with a time limit of 1 week. Completed in 3 days. Further time was used to collaborate on front-end development and make changes to the API as needed by that team.</p>\n                    <p>Solely responsible for some of the more advanced queries, also mentored teammate on selection and joins using Knex.</p>\n                    <p>Used Express to create a Rest API. We predicted the needs of the front-end team and wrote our queries with Knex to provide data in a structured and user friendly format to our front-end team.</p>\n                    <div className='line-break'></div>\n                    <p><a href='https://github.com/TLBdev/TLBdev.github.io'>Portfolio Web Site</a></p>\n                    <p>A single-page responsive React web app with a simple design and clean architecture</p>\n                    <p>React | CSS </p>\n                    <p>This Portfolio is the deployed site you are currently viewing and was built with no Deadline. I expect a total of 10 man-hours at time of completion.</p>\n                    <p>Solely responsible for all stages of development.</p>\n                    <p>Used React and CSS to create a single-page web app that uses modals to display a variety of information in a simple easy-to-use format.</p>\n                </div>\n            </div>\n        </div>)\n}\n\nexport default Projects","import React from 'react'\nimport './Modals.css'\nfunction Skills(props) {\n    return (\n        <div className='modal-background' onClick={props.toggleMain}>\n            <div className='modal' onClick={props.stopPropagation}>\n                <div className='title-bar'>\n                    <h2>\n                        Skills\n                    </h2>\n                    <div className='close' onClick={props.toggleMain}>\n                        <h2>X</h2>\n                    </div>\n                </div>\n                <div className='content'>\n                    <p>> Programming Languages:</p>\n                    <p> Python  |   JS</p>\n                    <p></p>\n                    <p>> Frameworks / Libraries:</p>\n                    <p> React  |\n                    Express  |\n                    Knex  |\n                     Redux</p>\n                    <p>> Databases:</p>\n                    <p> Sqlite3  |\n                     PostgreSQL</p>\n                    <p>> CSS</p>\n                    <p>> HTML5</p>\n                    <p>> Node</p>\n                    <p>> Git</p>\n                </div>\n            </div>\n        </div>)\n}\n\nexport default Skills","import React, { useState } from 'react';\nimport './App.css';\nimport AboutMe from './components/AboutMe'\nimport Main from './components/Main'\nimport Projects from './components/Projects'\nimport Skills from './components/Skills'\n\n\nfunction App() {\n  const [modals, setModals] = useState({\n    aboutMeModal: false,\n    skillsModal: false,\n    projectsModal: false\n  })\n\n  function stopPropagation(e) {\n    e.stopPropagation()\n  }\n\n  function toggleMain(e) {\n    e.preventDefault()\n    setModals({\n      aboutMeModal: false,\n      skillsModal: false,\n      projectsModal: false\n    })\n  }\n\n  function toggleAbout(e) {\n    e.preventDefault()\n    setModals({\n      aboutMeModal: !modals.aboutMeModal,\n      skillsModal: false,\n      projectsModal: false\n    })\n  }\n\n  function toggleSkills(e) {\n    e.preventDefault()\n    setModals({\n      aboutMeModal: false,\n      skillsModal: !modals.skillsModal,\n      projectsModal: false\n    })\n  }\n\n  function toggleProjects(e) {\n    e.preventDefault()\n    setModals({\n      aboutMeModal: false,\n      skillsModal: false,\n      projectsModal: !modals.projectsModal\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"main\">\n          {!modals.projectsModal && !modals.skillsModal && !modals.aboutMeModal ? <Main /> : null}\n          {modals.projectsModal ? <Projects toggleMain={toggleMain} stopPropagation={stopPropagation} /> : null}\n          {modals.skillsModal ? <Skills toggleMain={toggleMain} stopPropagation={stopPropagation} /> : null}\n          {modals.aboutMeModal ? <AboutMe toggleMain={toggleMain} stopPropagation={stopPropagation} /> : null}\n        </div>\n        {!modals.projectsModal && !modals.skillsModal && !modals.aboutMeModal ?\n          <div className=\"button-cont\">\n            <div onClick={toggleAbout} name='aboutMeModal' className='button-left'>About Me</div>\n            <div onClick={toggleSkills} name='skillsModal' className='button-mid'>Skills</div>\n            <div onClick={toggleProjects} name='projectsModal' className='button-right'>Projects</div>\n          </div>\n          : null}\n\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}